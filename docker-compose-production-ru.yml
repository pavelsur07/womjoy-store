services:
  traefik:
    image: traefik:2.10
    command:
      --providers.docker=true
      --providers.docker.watch=true
      --providers.docker.swarmMode=true
      --providers.docker.exposedByDefault=false
      --entryPoints.http.address=:80
      --entryPoints.https.address=:443
      --certificatesresolvers.letsEncrypt.acme.httpChallenge=true
      --certificatesresolvers.letsEncrypt.acme.httpChallenge.entryPoint=http
      --certificatesresolvers.letsEncrypt.acme.email=mail@womjoy.ru
      --certificatesresolvers.letsEncrypt.acme.storage=/certs/acme.json
    ports:
      -   target: 80
          published: 80
          protocol: tcp
          mode: host
      -   target: 443
          published: 443
          protocol: tcp
          mode: host
    networks:
      - traefik-public
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - traefik-public-certs:/certs
    deploy:
      labels:
        - traefik.enable=true
        - traefik.docker.network=traefik-public
        
        - traefik.http.routers.http-catchall.rule=HostRegexp(`{host:.+}`)
        - traefik.http.routers.http-catchall.entryPoints=http
        - traefik.http.routers.http-catchall.middlewares=redirect-to-https
        - traefik.http.services.http-catchall.loadBalancer.server.port=80
        
        - traefik.http.middlewares.redirect-to-https.redirectScheme.scheme=https
        - traefik.http.middlewares.redirect-to-https.redirectScheme.permanent=true
        
        - traefik.http.middlewares.secure-headers.headers.sslRedirect=true
        - traefik.http.middlewares.secure-headers.headers.stsSeconds=31536000
        - traefik.http.middlewares.secure-headers.headers.contentSecurityPolicy=block-all-mixed-content
      placement:
        constraints: [ node.role == manager ]
  cron:
    image: crazymax/swarm-cronjob:latest
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      LOG_LEVEL: info
    deploy:
      placement:
        constraints: [ node.role == manager ]
        
  imgproxy:
    image: darthsim/imgproxy:latest
    environment:
      IMGPROXY_MAX_SRC_RESOLUTION: 20
#      IMGPROXY_BASE_URL: 'http://imgproxy.womjoy.ru'
#      IMGPROXY_KEY: 'hex-encoded-key'
#      IMGPROXY_SALT: 'hex-encoded-salt'
    networks:
      - traefik-public
      - default
    deploy:
      labels:
        - traefik.enable=true
        - traefik.docker.network=traefik-public
        - traefik.http.routers.imgproxy.rule=Host(`imgproxy.womjoy.ru`)
        - traefik.http.services.imgproxy.loadBalancer.server.port=8080
        - traefik.http.routers.imgproxy.entryPoints=https
        - traefik.http.routers.imgproxy.tls=true
        - traefik.http.routers.imgproxy.tls.certResolver=letsEncrypt
      placement:
        constraints: [ node.role == manager ]
  
  site:
    image: ${REGISTRY}/site:${IMAGE_TAG}
    networks:
      - traefik-public
      - default
    deploy:
      labels:
        - traefik.enable=true
        - traefik.docker.network=traefik-public
        - traefik.http.routers.frontend.rule=Host(`womjoy.ru`) || Host(`www.womjoy.ru`)
        - traefik.http.services.frontend.loadBalancer.server.port=80
        - traefik.http.middlewares.frontend-redirect.redirectRegex.regex=^(https?://)www.womjoy.ru/(.*)$$
        - traefik.http.middlewares.frontend-redirect.redirectRegex.replacement=$${1}womjoy.ru/$${2}
        - traefik.http.middlewares.frontend-redirect.redirectRegex.permanent=true
        - traefik.http.routers.frontend.middlewares=frontend-redirect,secure-headers
        - traefik.http.routers.frontend.entryPoints=https
        - traefik.http.routers.frontend.tls=true
        - traefik.http.routers.frontend.tls.certResolver=letsEncrypt
      mode: replicated
      replicas: 2
      update_config:
        parallelism: 1
        delay: 10s
  
  site-php-fpm:
    image: ${REGISTRY}/site-php-fpm:${IMAGE_TAG}
    environment:
      APP_ENV: prod
      APP_DEBUG: 0
      APP_SECRET: ${APP_SECRET}
      SITE_LOCALE: 'ru'
      SITE_URL: 'https://womjoy.ru'
      MAILER_DSN: smtp://info@womjoy.ru:${SITE_MAIL_PASSWORD}@smtp.mail.ru:465
      DATABASE_URL: pgsql://app:${DB_PASSWORD}@site-postgres:5432/app
      MESSENGER_TRANSPORT_DSN: doctrine://default?auto_setup=0
      SENTRY_DSN: ${SENTRY_DSN}
      # TODO: Remove after installing CS Fixer for PHP 8.2
      PHP_CS_FIXER_IGNORE_ENV: 1
      AWS_S3_ACCESS_ID: ${SITE_S3_ACCESS_ID}
      AWS_S3_ACCESS_SECRET: ${SITE_S3_SECRET}
      AWS_S3_DEFAULT_REGION: 'ru-1'
      S3_ENDPOINT: 'https://s3.timeweb.com'
      S3_BUCKET: '482c8326-f46726b3-b4df-4af2-a784-36893c9644a1'
      #STORAGE_BASE_URL: 'https://static.womjoy.ru/s3'
      STORAGE_BASE_URL: 'https://womjoy.ru/images/s3'
      CACHE_PATH_IMAGE: '/cache'
      REDIS_HOST: site-redis
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      IMGPROXY_BASE_URL: 'http://imgproxy.womjoy.ru'
      IMGPROXY_KEY: 'hex-encoded-key'
      IMGPROXY_SALT: 'hex-encoded-salt'
      PAYMENT_PROVIDER_NAME: 'alfa'
      ALFABANK_API: 'https://payment.alfabank.ru'
      ALFABANK_USERNAME: ${SITE_ALFABANK_USERNAME}
      ALFABANK_PASSWORD: ${SITE_ALFABANK_PASSWORD}
      GOOGLE_RECAPTCHA_SITE_KEY: ${GOOGLE_RECAPTCHA_SITE_KEY}
      GOOGLE_RECAPTCHA_SECRET: ${GOOGLE_RECAPTCHA_SECRET}
    deploy:
      mode: replicated
      replicas: 2
      update_config:
        parallelism: 1
        delay: 10s
  
  site-migration:
    image: ${REGISTRY}/site-php-cli:${IMAGE_TAG}
    environment:
      APP_ENV: prod
      APP_DEBUG: 0
      APP_SECRET: ${APP_SECRET}
      SITE_LOCALE: 'ru'
      SITE_URL: 'https://womjoy.ru'
      DATABASE_URL: pgsql://app:${DB_PASSWORD}@site-postgres:5432/app
      MESSENGER_TRANSPORT_DSN: doctrine://default?auto_setup=0
      SENTRY_DSN: ${SENTRY_DSN}
      # TODO: Remove after installing CS Fixer for PHP 8.2
      PHP_CS_FIXER_IGNORE_ENV: 1
      AWS_S3_ACCESS_ID: ${SITE_S3_ACCESS_ID}
      AWS_S3_ACCESS_SECRET: ${SITE_S3_SECRET}
      AWS_S3_DEFAULT_REGION: 'ru-1'
      S3_ENDPOINT: 'https://s3.timeweb.com'
      S3_BUCKET: '482c8326-f46726b3-b4df-4af2-a784-36893c9644a1'
      #STORAGE_BASE_URL: 'https://static.womjoy.ru/s3'
      STORAGE_BASE_URL: 'https://womjoy.ru/images/s3'
      CACHE_PATH_IMAGE: '/cache'
      REDIS_HOST: site-redis
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      IMGPROXY_BASE_URL: 'http://imgproxy.womjoy.ru'
      IMGPROXY_KEY: 'hex-encoded-key'
      IMGPROXY_SALT: 'hex-encoded-salt'
    command: sh -c 'wait-for-it site-postgres:5432 -t 60 && php bin/console doctrine:migrations:migrate --no-interaction'
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 5
        window: 120s
  
  site-generate-site-map:
    image: ${REGISTRY}/site-php-cli:${IMAGE_TAG}
    environment:
      APP_ENV: prod
      APP_DEBUG: 0
      APP_SECRET: ${APP_SECRET}
      SITE_LOCALE: 'ru'
      SITE_URL: 'https://womjoy.ru'
      DATABASE_URL: pgsql://app:${DB_PASSWORD}@site-postgres:5432/app
      MESSENGER_TRANSPORT_DSN: doctrine://default?auto_setup=0
      SENTRY_DSN: ${SENTRY_DSN}
      # TODO: Remove after installing CS Fixer for PHP 8.2
      PHP_CS_FIXER_IGNORE_ENV: 1
      AWS_S3_ACCESS_ID: ${SITE_S3_ACCESS_ID}
      AWS_S3_ACCESS_SECRET: ${SITE_S3_SECRET}
      AWS_S3_DEFAULT_REGION: 'ru-1'
      S3_ENDPOINT: 'https://s3.timeweb.com'
      S3_BUCKET: '482c8326-f46726b3-b4df-4af2-a784-36893c9644a1'
      #STORAGE_BASE_URL: 'https://static.womjoy.ru/s3'
      STORAGE_BASE_URL: 'https://womjoy.ru/images/s3'
      CACHE_PATH_IMAGE: '/cache'
      REDIS_HOST: site-redis
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      IMGPROXY_BASE_URL: 'http://imgproxy.womjoy.ru'
      IMGPROXY_KEY: 'hex-encoded-key'
      IMGPROXY_SALT: 'hex-encoded-salt'
    command: sh -c 'wait-for-it site-postgres:5432 -t 60 && php bin/console sitemap:generate --no-interaction'
    deploy:
      labels:
        - swarm.cronjob.enable=true
        - swarm.cronjob.schedule=0 * * * *
        - swarm.cronjob.skip-running=true
      restart_policy:
        condition: none
  
  site-generate-yandex-fid:
    image: ${REGISTRY}/site-php-cli:${IMAGE_TAG}
    environment:
      APP_ENV: prod
      APP_DEBUG: 0
      APP_SECRET: ${APP_SECRET}
      SITE_LOCALE: 'ru'
      SITE_URL: 'https://womjoy.ru'
      DATABASE_URL: pgsql://app:${DB_PASSWORD}@site-postgres:5432/app
      MESSENGER_TRANSPORT_DSN: doctrine://default?auto_setup=0
      SENTRY_DSN: ${SENTRY_DSN}
      # TODO: Remove after installing CS Fixer for PHP 8.2
      PHP_CS_FIXER_IGNORE_ENV: 1
      AWS_S3_ACCESS_ID: ${SITE_S3_ACCESS_ID}
      AWS_S3_ACCESS_SECRET: ${SITE_S3_SECRET}
      AWS_S3_DEFAULT_REGION: 'ru-1'
      S3_ENDPOINT: 'https://s3.timeweb.com'
      S3_BUCKET: '482c8326-f46726b3-b4df-4af2-a784-36893c9644a1'
      #STORAGE_BASE_URL: 'https://static.womjoy.ru/s3'
      STORAGE_BASE_URL: 'https://womjoy.ru/images/s3'
      CACHE_PATH_IMAGE: '/cache'
      REDIS_HOST: site-redis
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      IMGPROXY_BASE_URL: 'http://imgproxy.womjoy.ru'
      IMGPROXY_KEY: 'hex-encoded-key'
      IMGPROXY_SALT: 'hex-encoded-salt'
    command: sh -c 'wait-for-it site-postgres:5432 -t 60 && php bin/console yandex:fid-generate --no-interaction'
    deploy:
      labels:
        - swarm.cronjob.enable=true
        - swarm.cronjob.schedule=0 * * * *
        - swarm.cronjob.skip-running=true
      restart_policy:
        condition: none
  site-clear-old-cart:
    image: ${REGISTRY}/site-php-cli:${IMAGE_TAG}
    environment:
      APP_ENV: prod
      APP_DEBUG: 0
      APP_SECRET: ${APP_SECRET}
      SITE_LOCALE: 'ru'
      SITE_URL: 'https://womjoy.ru'
      DATABASE_URL: pgsql://app:${DB_PASSWORD}@site-postgres:5432/app
      MESSENGER_TRANSPORT_DSN: doctrine://default?auto_setup=0
      SENTRY_DSN: ${SENTRY_DSN}
      # TODO: Remove after installing CS Fixer for PHP 8.2
      PHP_CS_FIXER_IGNORE_ENV: 1
      AWS_S3_ACCESS_ID: ${SITE_S3_ACCESS_ID}
      AWS_S3_ACCESS_SECRET: ${SITE_S3_SECRET}
      AWS_S3_DEFAULT_REGION: 'ru-1'
      S3_ENDPOINT: 'https://s3.timeweb.com'
      S3_BUCKET: '482c8326-f46726b3-b4df-4af2-a784-36893c9644a1'
      #STORAGE_BASE_URL: 'https://static.womjoy.ru/s3'
      STORAGE_BASE_URL: 'https://womjoy.ru/images/s3'
      CACHE_PATH_IMAGE: '/cache'
      REDIS_HOST: site-redis
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      IMGPROXY_BASE_URL: 'http://imgproxy.womjoy.ru'
      IMGPROXY_KEY: 'hex-encoded-key'
      IMGPROXY_SALT: 'hex-encoded-salt'
    command: sh -c 'wait-for-it site-postgres:5432 -t 60 && php bin/console cart:clear --no-interaction'
    deploy:
      labels:
        - swarm.cronjob.enable=true
        - swarm.cronjob.schedule=0 0 * * *
        - swarm.cronjob.skip-running=true
      restart_policy:
        condition: none
  
  site-async:
    image: ${REGISTRY}/site-php-cli:${IMAGE_TAG}
    environment:
      APP_ENV: prod
      APP_DEBUG: 0
      APP_SECRET: ${APP_SECRET}
      SITE_LOCALE: 'ru'
      SITE_URL: 'https://womjoy.ru'
      MAILER_DSN: smtp://info@womjoy.ru:${SITE_MAIL_PASSWORD}@smtp.mail.ru:465
      DATABASE_URL: pgsql://app:${DB_PASSWORD}@site-postgres:5432/app
      MESSENGER_TRANSPORT_DSN: doctrine://default?auto_setup=0
      SENTRY_DSN: ${SENTRY_DSN}
      # TODO: Remove after installing CS Fixer for PHP 8.2
      PHP_CS_FIXER_IGNORE_ENV: 1
      AWS_S3_ACCESS_ID: ${SITE_S3_ACCESS_ID}
      AWS_S3_ACCESS_SECRET: ${SITE_S3_SECRET}
      AWS_S3_DEFAULT_REGION: 'ru-1'
      S3_ENDPOINT: 'https://s3.timeweb.com'
      S3_BUCKET: '482c8326-f46726b3-b4df-4af2-a784-36893c9644a1'
      STORAGE_BASE_URL: 'https://womjoy.ru/images/s3'
      CACHE_PATH_IMAGE: '/cache'
      REDIS_HOST: site-redis
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      IMGPROXY_BASE_URL: 'https://imgproxy.womjoy.ru'
      IMGPROXY_KEY: 'hex-encoded-key'
      IMGPROXY_SALT: 'hex-encoded-salt'
      PAYMENT_PROVIDER_NAME: 'alfa'
      ALFABANK_API: 'https://payment.alfabank.ru'
      ALFABANK_USERNAME: ${SITE_ALFABANK_USERNAME}
      ALFABANK_PASSWORD: ${SITE_ALFABANK_PASSWORD}
    command: sh -c "until [ -f .ready ] ; do sleep 1 ; done && php bin/console messenger:consume async -vv"
    deploy:
      mode: replicated
      replicas: 2
      update_config:
        parallelism: 1
        delay: 10s
  
  site-postgres:
    image: postgres:15.1-alpine
    restart: always
    environment:
      POSTGRES_USER: app
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: app
    volumes:
      - site-postgres:/var/lib/postgresql/data
    deploy:
      placement:
        constraints: [ node.labels.db == db ]
      endpoint_mode: dnsrr
  
  site-redis:
    image: redis:7.0-alpine
    restart: always
    volumes:
      - site-redis:/data
    command:
      - 'redis-server'
      - '--databases 2'
      - '--save 900 1'
      - '--save 300 10'
      - '--save 60 10000'
      - '--requirepass ${REDIS_PASSWORD}'
    deploy:
      placement:
        constraints: [ node.role == manager ]
        
  storage-nginx:
    image: ${REGISTRY}/storage-nginx:${IMAGE_TAG}
    networks:
      - traefik-public
      - default
    labels:
      - traefik.enable=true
      - traefik.docker.network=traefik-public
      - traefik.http.routers.storage.rule=Host(`cdn.womjoy.ru`) || Host(`www.cdn.womjoy.ru`)
      - traefik.http.services.storage.loadBalancer.server.port=80
      - traefik.http.middlewares.storage-redirect.redirectRegex.regex=^(https?://)www.cdn.womjoy.ru/(.*)$$
      - traefik.http.middlewares.storage-redirect.redirectRegex.replacement=$${1}cdn.womjoy.ru/$${2}
      - traefik.http.middlewares.storage-redirect.redirectRegex.permanent=true
      - traefik.http.routers.storage.middlewares=frontend-redirect,secure-headers
      - traefik.http.routers.storage.entryPoints=https
      - traefik.http.routers.storage.tls=true
      - traefik.http.routers.storage.tls.certResolver=letsEncrypt
    deploy:
      placement:
        constraints: [ node.role == manager ]
volumes:
  site-postgres:
  traefik-public-certs:
  site-redis:

networks:
  traefik-public:
    external: true
    driver: bridge
