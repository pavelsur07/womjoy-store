# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:
    locale: 'ru'
    # This parameter defines the codes of the locales (languages) enabled in the application
    #app_locales: ar|en|fr|de|es|cs|nl|ru|uk|ro|pt_BR|pl|it|ja|id|ca|sl|hr|zh_CN|bg|tr|lt|bs|sr_Cyrl|sr_Latn|eu
    app_locales: ru|bg|en
    app.notifications.email_sender: anonymous@example.com
    app_thumbnails: 900-1200|300-400
    app_cache_image: '/cache'
    

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        bind: # defines the scalar arguments once and apply them to any service defined/created in this file
            string $locales: '%app_locales%'
            string $defaultLocale: '%locale%'
            string $emailSender: '%app.notifications.email_sender%'
            string $cachePathImages: '%env(CACHE_PATH_IMAGE)%'
            #string $cachePathImages: '%app_cache_image%'
            string $thumbnails: '%app_thumbnails%'

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'
    
    Aws\S3\S3Client:
        arguments:
            - version: 'latest'
              region: '%env(AWS_S3_DEFAULT_REGION)%'
              endpoint: '%env(S3_ENDPOINT)%'
              use_path_style_endpoint: true
              credentials:
                  key: '%env(AWS_S3_ACCESS_ID)%'
                  secret: '%env(AWS_S3_ACCESS_SECRET)%'

    Redis:
        class: Redis
        calls:
            -   method: connect
                arguments:
                    - '%env(REDIS_HOST)%'
            -   method: auth
                arguments:
                    - '%env(REDIS_PASSWORD)%'

    Symfony\Component\HttpFoundation\Session\Storage\Handler\RedisSessionHandler:
        arguments:
            - '@Redis'
    
    App\Common\Infrastructure\Doctrine\Flusher:
        class: App\Common\Infrastructure\Doctrine\Flusher
    
    Cocur\Slugify\Slugify:
        class: Cocur\Slugify\Slugify
    
    App\Store\Infrastructure\Repository\ProductRepository:
        class: App\Store\Infrastructure\Repository\ProductRepository
        
    App\Store\Domain\Repository\CategoryRepositoryInterface:
        class: App\Store\Infrastructure\Repository\CategoryRepository
    
#    App\Common\Infrastructure\Uploader\FileUploader:
#        arguments: [ '@default.storage', '%env(STORAGE_BASE_URL)%' ]
    App\Common\Infrastructure\Uploader\FileUploader:
        arguments: [ '@uploads.storage.aws', '%env(STORAGE_BASE_URL)%' ]
        
    #App\Store\Domain\Repository\CategoryRepositoryInterface:
    #    class: App\Store\Infrastructure\Repository\CategoryRepository
    
    App\Common\Infrastructure\Service\Thumbnail\ThumbnailService:
        arguments: [ '@uploads.storage.aws', '%env(STORAGE_BASE_URL)%', '%env(CACHE_PATH_IMAGE)%']

    App\Matrix\Infrastructure\Menu\ProductActionMenu:
        tags: [ { name: knp_menu.menu_builder, method: build, alias: matrix_product_action } ]
    
    App\Store\Infrastructure\Menu\Admin\Product\ProductActionMenu:
        tags: [ { name: knp_menu.menu_builder, method: build, alias: store_product_action } ]
        
    App\Store\Infrastructure\Menu\Admin\Category\CategoryActionMenu:
        tags: [ { name: knp_menu.menu_builder, method: build, alias: store_category_action } ]