# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:
    locale: '%env(SITE_LOCALE)%'
    app_locales: ru|bg|en
    app.notifications.email_sender: anonymous@example.com
    app_thumbnails: 900-1200|360-480|300-400
    app_cache_image: '/cache'
    app_url: '%env(SITE_URL)%'

    # Параметры платёжной системы Stripe
    stripe_api_key: '%env(STRIPE_API_KEY)%'
    
    template_name: '%env(TEMPLATE_NAME)%'

    # Параметры платёжной системы Alfabank
    alfabank_api: '%env(ALFABANK_API)%'
    alfabank_username: '%env(ALFABANK_USERNAME)%'
    alfabank_password: '%env(ALFABANK_PASSWORD)%'

    google_recaptcha_site_key: '%env(GOOGLE_RECAPTCHA_SITE_KEY)%'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        bind: # defines the scalar arguments once and apply them to any service defined/created in this file
            string $locales: '%app_locales%'
            string $defaultLocale: '%locale%'
            string $emailSender: '%app.notifications.email_sender%'
            string $cachePathImages: '%env(CACHE_PATH_IMAGE)%'
            string $thumbnails: '%app_thumbnails%'
            string $siteUrl: '%app_url%'
            string $templateName: '%template_name%'
            string $stripeApiKey: '%stripe_api_key%'
            string $alfabankApi: '%alfabank_api%'
            string $alfabankUsername: '%alfabank_username%'
            string $alfabankPassword: '%alfabank_password%'
            string $googleRecaptchaSiteKey: '%env(GOOGLE_RECAPTCHA_SITE_KEY)%'
            string $googleRecaptchaSecret: '%env(GOOGLE_RECAPTCHA_SECRET)%'

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'

    App\Store\Infrastructure\Service\Moysklad\MoyskladCredentials:
        arguments:
            $token: '%env(MOYSKLAD_TOKEN)%'

    App\Store\Infrastructure\Service\Moysklad\MoyskladOrganization:
        arguments:
            $organization: '%env(MOYSKLAD_ORGANIZATION)%'

    App\Store\Infrastructure\Service\Moysklad\MoyskladStore:
        arguments:
            $store: '%env(MOYSKLAD_STORE)%'

    Aws\S3\S3Client:
        arguments:
            - version: 'latest'
              region: '%env(AWS_S3_DEFAULT_REGION)%'
              endpoint: '%env(S3_ENDPOINT)%'
              use_path_style_endpoint: true
              credentials:
                  key: '%env(AWS_S3_ACCESS_ID)%'
                  secret: '%env(AWS_S3_ACCESS_SECRET)%'

    Redis:
        class: Redis
        calls:
            -   method: connect
                arguments:
                    - '%env(REDIS_HOST)%'
            -   method: auth
                arguments:
                    - '%env(REDIS_PASSWORD)%'

    Symfony\Component\HttpFoundation\Session\Storage\Handler\RedisSessionHandler:
        arguments:
            - '@Redis'
    
    App\Common\Infrastructure\Doctrine\Flusher:
        class: App\Common\Infrastructure\Doctrine\Flusher
    
    Cocur\Slugify\Slugify:
        class: Cocur\Slugify\Slugify
    
    App\Store\Infrastructure\Repository\CartRepository:
        class: App\Store\Infrastructure\Repository\CartRepository
        
    App\Store\Infrastructure\Repository\OrderRepository:
        class: App\Store\Infrastructure\Repository\OrderRepository
    
    App\Store\Infrastructure\Repository\ProductRepository:
        class: App\Store\Infrastructure\Repository\ProductRepository
        
    App\Store\Infrastructure\Repository\VariantRepository:
        class: App\Store\Infrastructure\Repository\VariantRepository
        
    App\Store\Domain\Repository\CategoryRepositoryInterface:
        class: App\Store\Infrastructure\Repository\Category\CategoryRepository
        
    App\Menu\Domain\Repository\MenuRepositoryInterface:
        class: App\Menu\Infrastructure\Repository\MenuRepository
        
    App\Store\Domain\Repository\HomeRepositoryInterface:
        class: App\Store\Infrastructure\Repository\HomeRepository
        
    App\Guarantee\Domain\Repository\GuaranteeRepositoryInterface:
        class: App\Guarantee\Infrastructure\Repository\GuaranteeRepository

    App\Subscriber\Domain\Repository\SubscriberRepository:
        class: App\Subscriber\Domain\Repository\SubscriberRepository
    
    App\Setting\Infrastructure\Repository\SettingRepository:
        class: App\Setting\Infrastructure\Repository\SettingRepository
        
    App\Store\Infrastructure\Repository\AttributeRepository:
        class: App\Store\Infrastructure\Repository\AttributeRepository
    
    App\Store\Infrastructure\Repository\MessageRepository:
        class: App\Store\Infrastructure\Repository\MessageRepository
        
    App\Common\Infrastructure\Uploader\FileUploader:
        arguments: [ '@uploads.storage.aws', '%env(STORAGE_BASE_URL)%' ]
        
    
    App\Common\Infrastructure\Service\Thumbnail\ThumbnailService:
        arguments: [ '@uploads.storage.aws', '%env(STORAGE_BASE_URL)%', '%env(CACHE_PATH_IMAGE)%']

    App\Matrix\Infrastructure\Menu\ProductActionMenu:
        tags: [ { name: knp_menu.menu_builder, method: build, alias: matrix_product_action } ]
    
    App\Store\Infrastructure\Menu\Admin\Product\ProductActionMenu:
        tags: [ { name: knp_menu.menu_builder, method: build, alias: store_product_action } ]
        
    App\Store\Infrastructure\Menu\Admin\Category\CategoryActionMenu:
        tags: [ { name: knp_menu.menu_builder, method: build, alias: store_category_action } ]
        
    App\Store\Infrastructure\Menu\Admin\Home\HomeActionMenu:
        tags: [ { name: knp_menu.menu_builder, method: build, alias: store_home_action } ]
        
    App\Page\Infrastructure\Menu\Admin\PageActionMenu:
        tags: [ { name: knp_menu.menu_builder, method: build, alias: page_page_action } ]
    
    App\Store\Infrastructure\Menu\Admin\Attribute\AttributeActionMenu:
        tags: [ { name: knp_menu.menu_builder, method: build, alias: store_attribute_action } ]
        
    App\Store\Infrastructure\Menu\Admin\Order\OrderActionMenu:
        tags: [ { name: knp_menu.menu_builder, method: build, alias: store_order_action } ]
    
    App\Store\Infrastructure\Service\Payment\PaymentProvider:
        arguments: [ '%env(PAYMENT_PROVIDER_NAME)%' ]
        
    App\Store\Infrastructure\Repository\YmlRepository:
        class: App\Store\Infrastructure\Repository\YmlRepository
        
    App\Store\Infrastructure\Repository\SubscribeProductRepository:
        class: App\Store\Infrastructure\Repository\SubscribeProductRepository
    
    
    #---------------------- Matrix ------------- Deprecated ---------------------------------#
    App\Matrix\Domain\Repository\Product\ProductRepositoryInterface:
        class: App\Matrix\Infrastructure\Repository\Product\ProductRepository
    
    App\Matrix\Domain\Repository\SubjectRepositoryInterface:
        class: App\Matrix\Infrastructure\Repository\SubjectRepository
    
    App\Matrix\Domain\Repository\ModelRepositoryInterface:
        class: App\Matrix\Infrastructure\Repository\ModelRepository
    
    App\Matrix\Domain\Repository\ColorRepositoryInterface:
        class: App\Matrix\Infrastructure\Repository\ColorRepository

    App\Matrix\Infrastructure\Repository\Finance\SaleRepository:
        class: App\Matrix\Infrastructure\Repository\Finance\SaleRepository
    
    App\Matrix\Infrastructure\Repository\Syncing\KeyRepository:
        class: App\Matrix\Infrastructure\Repository\Syncing\KeyRepository
        
    App\Matrix\Infrastructure\Repository\SellerRepository:
        class: App\Matrix\Infrastructure\Repository\SellerRepository
