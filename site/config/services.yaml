# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:
    locale: 'en'
    # This parameter defines the codes of the locales (languages) enabled in the application
    #app_locales: ar|en|fr|de|es|cs|nl|ru|uk|ro|pt_BR|pl|it|ja|id|ca|sl|hr|zh_CN|bg|tr|lt|bs|sr_Cyrl|sr_Latn|eu
    app_locales: en|ru|bg
    app.notifications.email_sender: anonymous@example.com

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        bind: # defines the scalar arguments once and apply them to any service defined/created in this file
            string $locales: '%app_locales%'
            string $defaultLocale: '%locale%'
            string $emailSender: '%app.notifications.email_sender%'

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'
    Aws\S3\S3Client:
        arguments:
            - version: '2006-03-01'
              region: 'us-east-1'
              endpoint: 's3.localhost'
              credentials:
                  key: '%env(AWS_S3_ACCESS_ID)%'
                  secret: '%env(AWS_S3_ACCESS_SECRET)%'

    Redis:
        class: Redis
        calls:
            -   method: connect
                arguments:
                    - '%env(REDIS_HOST)%'
            -   method: auth
                arguments:
                    - '%env(REDIS_PASSWORD)%'

    Symfony\Component\HttpFoundation\Session\Storage\Handler\RedisSessionHandler:
        arguments:
            - '@Redis'
    
    App\Repository\Flusher:
        class: App\Repository\Flusher
    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
    App\Menu\Admin\Product\MainMenu:
        tags: [{ name: knp_menu.menu_builder, method: build, alias: admin_product }]
    
    App\Repository\ProductRepository:
        class: App\Repository\ProductRepository
    
    App\Service\Uploader\FileUploader:
        arguments: [ '@default.storage', '%env(STORAGE_BASE_URL)%' ]
#    App\Service\Uploader\FileUploader:
#        arguments: [ '@uploads.storage.aws', '%env(STORAGE_BASE_URL)%' ]